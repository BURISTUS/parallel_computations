* Parallel computation
** Project structure
#+begin_src

  solution1
    src
      errors.rs
      main.rs
      lib.rs
    Cargo.toml

  solution2
    src
      errors.rs
      main.rs
      lib.rs
    Cargo.toml
  Readme.org
#+end_src


** Build and test
*** To run, you need to go to the folder with one of the projects and run the command. For example:

#+begin_src
cd solution1

cargo run
#+end_src

*** To test, you need to go to the folder with one of the projects and run the command. For example:

#+begin_src
cd solution1

cargo test
#+end_src


** Problem Statement
*** Requirements
Implement basic function to split some generic computational work between threads. Split should occur only on some threshold - if computational work (input length) is shorter than this threshold, no splitting should occur and no threads should be created.

You get as input:

1. Vec<T>
2. Function f(t: T) -> R


Threshold can be just constant.

You should return:
   1. Up to you, but probably some Vec of the same length as input(1)
